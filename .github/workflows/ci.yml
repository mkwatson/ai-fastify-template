name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  validate:
    name: Validate Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> "$GITHUB_ENV"

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Validate pipeline consistency
        run: |
          echo "üîç Verifying local 'pnpm ci:check' uses same pipeline as CI..."

          # Check that ci:check script uses validation pipeline
          if ! grep -q "node scripts/validation-pipeline.mjs --preset ci" package.json; then
            echo "‚ùå ERROR: package.json ci:check script not using validation pipeline!"
            echo "Expected: node scripts/validation-pipeline.mjs --preset ci"
            echo "Found: $(grep -A1 'ci:check' package.json | tail -1)"
            exit 1
          fi

          echo "‚úÖ Pipeline consistency verified"

      - name: Run validation pipeline
        run: node scripts/validation-pipeline.mjs --preset ci --force --verbose

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-artifacts-${{ github.sha }}
          path: |
            apps/*/dist/
            reports/
          retention-days: 7

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ github.sha }}
          path: |
            coverage/
            reports/
          retention-days: 30
