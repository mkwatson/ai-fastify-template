name: SDK Generation

on:
  push:
    branches: [main]
    paths:
      - 'apps/backend-api/src/**'
      - 'apps/backend-api/package.json'
      - 'fern/**'
      - '.github/workflows/sdk-generation.yml'
  workflow_dispatch:
    inputs:
      force_generation:
        description: 'Force SDK generation even if no API changes detected'
        required: false
        default: false
        type: boolean

concurrency:
  group: sdk-generation-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    name: Detect API Changes
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      api_changed: ${{ steps.changes.outputs.api_changed }}
      fern_changed: ${{ steps.changes.outputs.fern_changed }}
      should_generate: ${{ steps.should-generate.outputs.result }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        id: changes
        run: |
          if git diff --quiet HEAD~1 HEAD -- apps/backend-api/src/ apps/backend-api/package.json; then
            echo "api_changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "api_changed=true" >> "$GITHUB_OUTPUT"
          fi

          if git diff --quiet HEAD~1 HEAD -- fern/; then
            echo "fern_changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "fern_changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Determine if SDK generation should run
        id: should-generate
        run: |
          if [[ "${{ steps.changes.outputs.api_changed }}" == "true" ||
                "${{ steps.changes.outputs.fern_changed }}" == "true" ||
                "${{ github.event.inputs.force_generation }}" == "true" ]]; then
            echo "result=true" >> "$GITHUB_OUTPUT"
            echo "🚀 SDK generation will run due to detected changes or manual trigger"
          else
            echo "result=false" >> "$GITHUB_OUTPUT"
            echo "⏭️ Skipping SDK generation - no relevant changes detected"
          fi

  generate-sdk:
    name: Generate and Validate SDK
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.should_generate == 'true'
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> "$GITHUB_ENV"

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Generate OpenAPI specification
        run: pnpm openapi:generate

      - name: Validate Fern configuration
        run: pnpm fern:check

      - name: Generate SDK
        run: fern generate --local
        env:
          # Ensure we have access to Docker for Fern generation
          DOCKER_HOST: unix:///var/run/docker.sock

      - name: Validate generated SDK
        run: |
          # Check that SDK was generated
          if [ ! -d "packages/sdk" ]; then
            echo "❌ SDK directory not found"
            exit 1
          fi

          # Check for key files
          if [ ! -f "packages/sdk/package.json" ]; then
            echo "❌ SDK package.json not found"
            exit 1
          fi

          echo "✅ SDK generated successfully"

          # Show SDK structure
          echo "📁 Generated SDK structure:"
          find packages/sdk -type f -name "*.ts" -o -name "*.js" -o -name "*.json" | head -20

      - name: Test SDK compilation
        run: |
          cd packages/sdk
          if [ -f "package.json" ]; then
            # Install SDK dependencies if package.json exists
            pnpm install

            # Check if there's a build script
            if pnpm run --if-present build; then
              echo "✅ SDK builds successfully"
            else
              echo "ℹ️ No build script found, checking TypeScript compilation"

              # Try TypeScript compilation if available
              if command -v tsc &> /dev/null && [ -f "tsconfig.json" ]; then
                tsc --noEmit
                echo "✅ SDK TypeScript compilation successful"
              else
                echo "ℹ️ TypeScript not available for compilation check"
              fi
            fi
          fi

      - name: Create SDK changelog entry
        run: |
          # Generate changelog entry
          current_date=$(date +%Y-%m-%d)
          cat > sdk_changelog_entry.md << EOF
          ## SDK Changes - ${current_date}

          ### API Changes Detected
          - **API Modified**: ${{ needs.detect-changes.outputs.api_changed }}
          - **Fern Config Modified**: ${{ needs.detect-changes.outputs.fern_changed }}
          - **Commit**: ${{ github.sha }}

          ### Generated Files
          - OpenAPI Specification: \`apps/backend-api/openapi.json\`
          - TypeScript SDK: \`packages/sdk/\`

          ### Integration
          The SDK is now available for import:
          \`\`\`typescript
          import { AiFastifyTemplateAPI } from '@ai-fastify-template/sdk';
          \`\`\`

          EOF

          echo "📝 SDK changelog entry created"

      - name: Check for SDK changes
        id: sdk-changes
        run: |
          # Check if generated files have changed
          if git diff --quiet HEAD -- packages/sdk/ apps/backend-api/openapi.json; then
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
            echo "ℹ️ No changes detected in generated SDK"
          else
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
            echo "✅ SDK changes detected"

            # Show what changed
            echo "📝 Changed files:"
            git diff --name-only HEAD -- packages/sdk/ apps/backend-api/openapi.json
          fi

      - name: Commit and create PR for SDK updates
        if: steps.sdk-changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            chore(sdk): update generated SDK and OpenAPI specification

            - Update OpenAPI spec from API changes
            - Regenerate TypeScript SDK with latest changes
            - Automatic generation from commit ${{ github.sha }}

            🤖 Generated with [GitHub Actions](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          title: 'chore(sdk): update generated SDK from API changes'
          body: |
            ## Automated SDK Update 🤖

            This PR contains automatically generated updates to the SDK based on API changes.

            ### Changes Included
            - 📄 Updated OpenAPI specification
            - 📦 Regenerated TypeScript SDK
            - 🔄 Synchronized with commit ${{ github.sha }}

            ### API Changes Summary
            - **API Source Modified**: ${{ needs.detect-changes.outputs.api_changed }}
            - **Fern Configuration Modified**: ${{ needs.detect-changes.outputs.fern_changed }}

            ### Generated Files
            - `apps/backend-api/openapi.json` - Updated OpenAPI specification
            - `packages/sdk/` - Regenerated TypeScript SDK

            ### Testing
            - ✅ OpenAPI specification validates successfully
            - ✅ Fern configuration is valid
            - ✅ SDK generates without errors
            - ✅ Generated SDK compiles successfully

            ### Next Steps
            1. Review the generated changes
            2. Test the SDK with your applications
            3. Merge when satisfied with the updates

            ---

            *This PR was automatically created by the SDK Generation workflow.*
            *Triggered by changes in: ${{ github.event.head_commit.message }}*
          branch: automated/sdk-update-${{ github.run_number }}
          branch-suffix: timestamp
          delete-branch: true
          labels: |
            automated
            sdk
            documentation
          reviewers: |
            ${{ github.actor }}

      - name: Upload SDK artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: generated-sdk-${{ github.sha }}
          path: |
            packages/sdk/
            apps/backend-api/openapi.json
            sdk_changelog_entry.md
          retention-days: 30

      - name: Summary
        run: |
          {
            echo "## SDK Generation Summary 📊"
            echo ""
            echo "- **Repository**: ${{ github.repository }}"
            echo "- **Commit**: ${{ github.sha }}"
            echo "- **API Changes**: ${{ needs.detect-changes.outputs.api_changed }}"
            echo "- **Fern Changes**: ${{ needs.detect-changes.outputs.fern_changed }}"
            echo "- **SDK Updated**: ${{ steps.sdk-changes.outputs.has_changes }}"
            echo ""
            echo "### Files Generated"
            echo "- OpenAPI Specification: \`apps/backend-api/openapi.json\`"
            echo "- TypeScript SDK: \`packages/sdk/\`"
            echo ""
            if [[ "${{ steps.sdk-changes.outputs.has_changes }}" == "true" ]]; then
              echo "✅ **SDK updated successfully and PR created**"
            else
              echo "ℹ️ **No SDK changes needed**"
            fi
          } >> "$GITHUB_STEP_SUMMARY"
