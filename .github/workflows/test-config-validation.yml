name: Test Configuration Validation

on:
  pull_request:
    paths:
      - 'vitest.config.ts'
      - 'vitest.mutation.config.ts'
      - 'vitest.base.config.ts'
      - 'vitest.workspace.ts'
      - 'apps/*/test/**'
      - '.github/workflows/test-config-validation.yml'
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  test-configs:
    name: Run Tests with ${{ matrix.config }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - name: workspace
            file: vitest.config.ts
          - name: mutation
            file: vitest.mutation.config.ts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> "$GITHUB_ENV"

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Validate Configuration Consistency
        run: |
          echo "🔍 Validating Vitest configuration consistency..."
          NODE_OPTIONS='--import tsx' node scripts/validate-vitest-configs.js

      - name: Build dependencies
        run: pnpm build

      - name: Run tests with ${{ matrix.config.name }} config
        run: |
          pnpm vitest run -c ${{ matrix.config.file }} \
            --reporter=json \
            --outputFile=results-${{ matrix.config.name }}.json \
            apps/backend-api/test/utils/calculations.test.ts

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.config.name }}
          path: results-${{ matrix.config.name }}.json
          retention-days: 1

  compare-results:
    name: Compare Test Results
    needs: test-configs
    runs-on: ubuntu-latest

    steps:
      - name: Download workspace results
        uses: actions/download-artifact@v4
        with:
          name: test-results-workspace

      - name: Download mutation results
        uses: actions/download-artifact@v4
        with:
          name: test-results-mutation

      - name: Compare test results
        run: |
          echo "📊 Comparing test results between configs..."

          # Parse JSON results
          WORKSPACE_TOTAL=$(jq .numTotalTests results-workspace.json)
          WORKSPACE_PASSED=$(jq .numPassedTests results-workspace.json)
          MUTATION_TOTAL=$(jq .numTotalTests results-mutation.json)
          MUTATION_PASSED=$(jq .numPassedTests results-mutation.json)

          echo "Workspace config: $WORKSPACE_PASSED/$WORKSPACE_TOTAL tests passed"
          echo "Mutation config:  $MUTATION_PASSED/$MUTATION_TOTAL tests passed"

          if [ "$WORKSPACE_TOTAL" != "$MUTATION_TOTAL" ] || [ "$WORKSPACE_PASSED" != "$MUTATION_PASSED" ]; then
            echo "❌ Test configs produce different results!"
            echo "This could cause mutation testing to report incorrect coverage."
            exit 1
          fi

          echo "✅ Test configurations are compatible!"

      - name: Post comparison comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const workspace = JSON.parse(fs.readFileSync('results-workspace.json', 'utf8'));
            const mutation = JSON.parse(fs.readFileSync('results-mutation.json', 'utf8'));

            // Calculate duration from test results
            function calculateDuration(results) {
              if (!results.testResults || results.testResults.length === 0) {
                return 0;
              }
              const startTimes = results.testResults.map(r => r.startTime);
              const endTimes = results.testResults.map(r => r.endTime);
              const minStart = Math.min(...startTimes);
              const maxEnd = Math.max(...endTimes);
              return Math.round(maxEnd - minStart);
            }

            const workspaceDuration = calculateDuration(workspace);
            const mutationDuration = calculateDuration(mutation);

            const comment = `## Test Configuration Validation ✅

            Both Vitest configurations produce identical results:
            - **Total tests**: ${workspace.numTotalTests}
            - **Passed tests**: ${workspace.numPassedTests}
            - **Duration**: ${workspaceDuration}ms (workspace) vs ${mutationDuration}ms (mutation)

            The mutation testing configuration is compatible with the main test setup.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
